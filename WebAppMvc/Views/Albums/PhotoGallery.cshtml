@* @model IEnumerable<Photo> *@
@model X.PagedList.IPagedList<Photo>
@using X.PagedList.Mvc.Core
@inject IConfiguration config
@{
    ViewData["Title"] = "Photo Gallery";
}
<style>
    .float-end {
        position: relative !important;
        float: right !important;
        top: -9px !important;
        right: -9px !important;
    }
</style>
<h1> @ViewData["Title"] : @ViewData["AlbumTitle"]</h1>

<p>
    <a asp-action="AddPhoto">Add New</a> | <a asp-action="Index">Albums</a>
</p>
<div>
    <div class="form-check">
        <input class="form-check-input" type="checkbox" value="" id="checkAll">
        <label class="form-check-label" for="checkAll">
            Select All
        </label>
        <input type="button" id="btnDelete" value="Delete" class="btn btn-danger btn-sm d-none" />
    </div>
</div>
<div class="row">
    @{
        var id = Context.Request.RouteValues["id"]?.ToString();

        foreach (var item in Model)
        {
            <div class="col-md-3 mb-2">
                <div class="card shadow-sm" style="max-height: 170px;">
                    <div class="card-body text-center p-2">
                        @if (User.Identity!.IsAuthenticated)
                        {
                            <form asp-action="PhotoDelete">
                                <input type="hidden" name="albumid" value="@id" />
                                <input type="hidden" name="id" value="@item.Id" />
                                @Html.AntiForgeryToken()
                                <input type="submit" value="X" class="btn btn-sm btn-danger px-2 py-0 float-end" onclick="return confirm('Are you sure to delete it?')" />
                            </form>
                        }
                        <img src="~/@config["Uploading:PhotoUpload"]/@item.ImageUrl" class="img img-fluid rounded-3" style="max-height: 100px;" alt="@item.Title"><br />
                        <span class="text-muted" style="font-size:10px">@item.Title</span>
                        <input class="form-check-input cbPhoto" name="checkboxItem" type="checkbox" value="@item.Id" id="checkboxItem">
                    </div>
                </div>
            </div>
        }

    }
</div>
<div class="row">
    <div class="col-md-12">
        <!-- Pagination Controls -->
        <div class="text-center">
            @Html.PagedListPager(Model, page => Url.Action("PhotoGallery", new { page,id }),
            new PagedListRenderOptions
            {
                DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                DisplayLinkToIndividualPages = true,
                MaximumPageNumbersToDisplay = 5,
                ClassToApplyToFirstListItemInPager = "page-item",
                ClassToApplyToLastListItemInPager = "page-item",
                LinkToPreviousPageFormat = "«",
                LinkToNextPageFormat = "»",
                UlElementClasses = new[] { "pagination" },
                PageClasses = new[] { "page-link" }
            })
        </div>
    </div>
</div>
@section Scripts {

    <script>
           // When "Select All" checkbox is clicked
           $("#checkAll").click(function () {
               $(".cbPhoto").prop("checked", this.checked);
               if(this.checked){
                    $("#btnDelete").removeClass("d-none").addClass("d-inline");
               }else{
                    $("#btnDelete").removeClass("d-inline").addClass("d-none");
               }
           });

           // If any item checkbox is unchecked, uncheck "Select All"
           $(".cbPhoto").click(function () {
               if (!$(this).prop("checked")) {
                   $("#checkAll").prop("checked", false);
               }

               // If all checkboxes are checked, check "Select All"
               if ($(".cbPhoto:checked").length === $(".cbPhoto").length) {
                   $("#checkAll").prop("checked", true);
               }

               if ($(".cbPhoto:checked").length===0) {
                   $("#btnDelete").removeClass("d-inline").addClass("d-none");
               }else{
                   $("#btnDelete").removeClass("d-none").addClass("d-inline");
               }
           });

        $(document).on("click","#btnDelete",function(){
            var confirm= window.confirm('Are you sure to delete it?');
            if(confirm){
                    console.info('btnDelete Yes Call');
                    var selectedIds = [];
                    $(".cbPhoto:checked").each(function () {
                    selectedIds.push($(this).val());           
                    });

                    // Debug
                    //console.log("Selected IDs:", selectedIds);
                    //-------------//
                    $.ajax({
                    url: '/Albums/DeleteSelectedPhoto',   // Controller Action
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(selectedIds),
                    success: function (response) {
                        alert(response.message);
                        //console.info(response);
                        window.location.reload();
                    },
                    error: function (xhr) {
                        alert("Error: " + xhr.responseText);
                    }
                    });
                    //------------//
                    }
        });


    </script>
}